extends layout

block content
  img(src=user.picture)
  h2 Welcome #{user.nickname}!
  br
  p#baseFolder #{baseFolder.name}
  each val in baseFolder.item_collection.entries
    if val.type === 'file' 
      a(href='./files/' + val.id) #{val.name}
      br
    else
      p= val.name
  p#accessToken #{user.boxAccessTokenObject.accessToken}
  label New Folder Name
    input(id="newFolder" type="text")
  input(id="createNewFolder" type="submit")
  h4 Upload File using CORS
    div.row
      div.col-md-4
        form(id="file-form" action="" method="POST")
            div.form-group
                input.form-control(id='file-select' name='files' type='file')
            div.form-group
                button.btn.btn-default(id='upload-button' type='submit') Upload
  a(href='/logout') Logout
block append scripts
  script(src="https://cdn.auth0.com/js/lock-9.0.js")
  script(src="./javascripts/BoxSdk.min.js")
  script(src="./node_modules/angular/angular.js")
  script(src="./node_modules/angular-animate/angular-animate.js")
  script(src="./node_modules/angular-aria/angular-aria.js")
  script(src="./node_modules/angular-material/angular-material.js")

  script(src="./javascripts/app/users/bootstrap.min.js")
  script(src="./javascripts/app/users/Users.js")
  script(src="./javascripts/app/users/UserController.js")
  script(src="./javascripts/app/users/UserService.js")
block inline-scripts
  script.
      angular
      .module('boxApp', ['ngMaterial', 'users'])
      .config(function($mdThemingProvider, $mdIconProvider){

          $mdIconProvider
              .defaultIconSet("/assets/svg/avatars.svg", 128)
              .icon("menu"       , "./assets/svg/menu.svg"        , 24)
              .icon("share"      , "./assets/svg/share.svg"       , 24)
              .icon("google_plus", "./assets/svg/google_plus.svg" , 512)
              .icon("hangouts"   , "./assets/svg/hangouts.svg"    , 512)
              .icon("twitter"    , "./assets/svg/twitter.svg"     , 512)
              .icon("phone"      , "./assets/svg/phone.svg"       , 512);

              $mdThemingProvider.theme('default')
                  .primaryPalette('brown')
                  .accentPalette('red');

      });
      
      var boxId = "!{user.app_metadata.boxId}";
      var idToken = "!{user.id_token}";
      var accessToken = "!{user.boxAccessTokenObject.accessToken}";
      
      function requestNewToken(boxId, idToken) {
        var headers = { Authorization: 'Bearer ' + idToken};
        var tokenUrl = "http://localhost:3000/usertoken";
        return $.ajax({
          url: tokenUrl,
          headers: headers,
          type: 'POST',
          data: {boxId: boxId}
        });
      }
      function errorHandler(options, client) {
        console.log("Caught the error...");
        console.log(options);
        requestNewToken(boxId, idToken)
        .success(function(data) {
          console.log(data);
          client.removeAccessTokenAndRerunRequest(options, data.accessToken, true)
          .then(function(item) {
            console.log(item);
          });
        })
        .error(function(jqXhr, textStatus, errorThrown) {
          console.log(errorThrown);
        });
      }


      var box = new BoxSdk();
      var client = new box.BasicBoxClient({accessToken: accessToken});

      var optionsOnly = new box.BasicBoxClient({accessToken: accessToken, noRequestMode: true});
      var returnedOptions = optionsOnly.folders.get({id: "0"});
      console.log(returnedOptions);

      var noJSONProcessing = new box.BasicBoxClient({accessToken: accessToken, parseJSONResponse: false});
      noJSONProcessing.folders.get({id: "0"})
      .then(function(folder) {
        console.log(folder);
      });

      requestNewToken(boxId, idToken)
      .success(function(data) {
        client.folders.get({id: "0"})
        .then(function(folder) {
            console.log(folder);
        })
        .catch(function(err) {
          console.log(err);
          errorHandler(err.options, client)
        });
      })

      $('#createNewFolder').click(function(event) {
        var newFolderName = $('#newFolder').val();
        client.folders.create({parent: {id: "0"}, name: newFolderName})
        .then(function(folder) {
          console.log(folder);
          location.reload(true);
        })
        .catch(function(err) {
          console.log(err);
        })
      });

      var form = document.getElementById('file-form');
      var fileSelect = document.getElementById('file-select');
      var uploadButton = document.getElementById('upload-button');

      form.onsubmit = function(event){
        event.preventDefault();
        uploadButton.innerHTML = 'Uploading...';
        var files = fileSelect.files;
        var formData = new FormData();

        formData.append('files', files[0], files[0].name);

        // Add the destination folder for the upload to the form
        formData.append('parent_id', '0');

        client.files.upload({body: formData})
        .then(function(resp) {
          uploadButton.innerHTML = 'Upload';
          console.log(resp);
          location.reload(true);
        })
        .catch(function(err) {
          console.log(err);
        });
      }